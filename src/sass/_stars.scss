@use 'sass:string';
@use 'sass:math' as m;
@use 'sass:list';
@use 'utilities' as *;

@function multipleBoxShadow($n, $h) {
  $value: '#{m.random(100)}vw #{m.random($h)}vh';
  @for $i from 2 through $n {
    $value: '#{$value}, #{m.random(100)}vw #{m.random($h)}vh';
  }
  @return string.unquote($value);
}

$starsSizes: 0.08rem 0.13rem 0.18rem;
$height: 100 200 400;
$shadows: multipleBoxShadow(600, (100 + list.nth($height, 3))),
  multipleBoxShadow(200, (100 + list.nth($height, 2))),
  multipleBoxShadow(40, (100 + list.nth($height, 1)));

@for $i from 1 through 3 {
  #star#{$i} {
    @include size(list.nth($starsSizes, $i));
    border-radius: 50%;
    background: transparent;
    box-shadow: list.nth($shadows, $i);

    ::after {
      content: ' ';
      position: fixed;
      border-radius: 50%;
      top: 0;
      @include size(list.nth($starsSizes, $i));
      box-shadow: list.nth($shadows, $i);
      background: transparent;
    }
  }

  @keyframes star#{$i} {
    to {
      transform: translateY(
        (-1vh * list.nth($height, -1 * $i))
      );
    }
  }
}
